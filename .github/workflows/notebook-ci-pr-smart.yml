# Smart Pull Request Workflow - Conditional CI Based on File Changes
# Copy this file to your repository's .github/workflows/ directory
# This workflow intelligently determines whether to run full CI or docs-only builds

name: Smart Notebook CI - Pull Request

on:
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'notebooks/**'
      - '*.yml'
      - '*.yaml'
      - 'requirements.txt'
      - 'pyproject.toml'
      - '_config.yml'
      - '_toc.yml'
      - 'scripts/**'

jobs:
  # Detect what files changed in the PR to determine workflow path
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      docs-only: ${{ steps.changes.outputs.docs-only }}
      notebooks-changed: ${{ steps.changes.outputs.notebooks-changed }}
      config-changed: ${{ steps.changes.outputs.config-changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect file changes
        id: changes
        run: |
          # Get the list of changed files
          echo "Getting changed files between base and head..."
          
          # Get changed files from PR
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }})
          else
            CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          fi
          
          echo "Changed files:"
          echo "$CHANGED_FILES"
          
          # Initialize flags
          NOTEBOOKS_CHANGED=false
          DOCS_CONFIG_CHANGED=false
          REQUIREMENTS_CHANGED=false
          
          # Check each changed file
          while IFS= read -r file; do
            echo "Checking file: $file"
            
            case "$file" in
              notebooks/*.ipynb)
                echo "  → Notebook file changed"
                NOTEBOOKS_CHANGED=true
                ;;
              notebooks/*.py|notebooks/*.R)
                echo "  → Notebook code file changed"
                NOTEBOOKS_CHANGED=true
                ;;              requirements.txt|pyproject.toml|setup.py)
                echo "  → Requirements file changed"
                REQUIREMENTS_CHANGED=true
                ;;
              _config.yml|_toc.yml)
                echo "  → Documentation config changed"
                DOCS_CONFIG_CHANGED=true
                ;;
              *.yml|*.yaml)
                # Only workflow or simple config files
                if [[ "$file" == .github/workflows/* ]]; then
                  echo "  → Workflow file changed (no CI needed)"
                else
                  echo "  → Config file changed"
                  DOCS_CONFIG_CHANGED=true
                fi
                ;;
              scripts/*)
                echo "  → Script file changed"
                DOCS_CONFIG_CHANGED=true
                ;;
              *.html|*.css|*.js)
                echo "  → Static web file changed"
                DOCS_CONFIG_CHANGED=true
                ;;
              *.md|*.rst)
                echo "  → Documentation file changed"
                DOCS_CONFIG_CHANGED=true
                ;;
              *)
                echo "  → Other file type"
                ;;
            esac
          done <<< "$CHANGED_FILES"
          
          # Determine workflow path
          if [ "$NOTEBOOKS_CHANGED" = "true" ] || [ "$REQUIREMENTS_CHANGED" = "true" ]; then
            echo "📔 Notebooks or requirements changed - Full CI needed"
            echo "notebooks-changed=true" >> $GITHUB_OUTPUT
            echo "docs-only=false" >> $GITHUB_OUTPUT
          elif [ "$DOCS_CONFIG_CHANGED" = "true" ]; then
            echo "📚 Only documentation/config files changed - Docs rebuild only"  
            echo "notebooks-changed=false" >> $GITHUB_OUTPUT
            echo "docs-only=true" >> $GITHUB_OUTPUT
          else
            echo "📝 No significant changes detected - Minimal validation"
            echo "notebooks-changed=false" >> $GITHUB_OUTPUT
            echo "docs-only=true" >> $GITHUB_OUTPUT
          fi
          
          echo "config-changed=$DOCS_CONFIG_CHANGED" >> $GITHUB_OUTPUT

  # Full notebook validation and execution (only when notebooks/requirements change)
  full-notebook-ci:
    needs: detect-changes
    if: needs.detect-changes.outputs.notebooks-changed == 'true'
    uses: spacetelescope/notebook-ci-actions/.github/workflows/ci_pipeline.yml@main
    with:
      python-version: "3.11"
      execution-mode: "validation-only"  # Safe for PR validation
      build-html: false  # HTML will be built separately
      security-scan: true
    secrets:
      CASJOBS_USERID: ${{ secrets.CASJOBS_USERID }}
      CASJOBS_PW: ${{ secrets.CASJOBS_PW }}

  # Documentation-only rebuild (when only docs/config files change)
  docs-only-rebuild:
    needs: detect-changes
    if: needs.detect-changes.outputs.docs-only == 'true'
    uses: spacetelescope/notebook-ci-actions/.github/workflows/ci_html_builder.yml@main
    with:
      python-version: "3.11"
      post-run-script: "scripts/jdaviz_image_replacement.sh"  # Optional, adjust per repo
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  # Always build documentation preview for PRs (after notebook validation if needed)
  build-docs-preview:
    needs: [detect-changes, full-notebook-ci, docs-only-rebuild]
    if: always() && (needs.full-notebook-ci.result == 'success' || needs.docs-only-rebuild.result == 'success' || (needs.full-notebook-ci.result == 'skipped' && needs.docs-only-rebuild.result == 'skipped'))
    uses: spacetelescope/notebook-ci-actions/.github/workflows/ci_html_builder.yml@main
    with:
      python-version: "3.11"
      post-run-script: "scripts/jdaviz_image_replacement.sh"  # Optional, adjust per repo
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  # Summary job to provide clear feedback
  pr-summary:
    needs: [detect-changes, full-notebook-ci, docs-only-rebuild, build-docs-preview]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: PR Validation Summary
        run: |
          echo "## 🔍 PR Validation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.detect-changes.outputs.notebooks-changed }}" = "true" ]; then
            echo "### 📔 Full Notebook CI" >> $GITHUB_STEP_SUMMARY
            echo "- **Reason**: Notebook or requirement files changed" >> $GITHUB_STEP_SUMMARY
            echo "- **Status**: ${{ needs.full-notebook-ci.result }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Execution**: Validation-only (safe for PRs)" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.detect-changes.outputs.docs-only }}" = "true" ]; then
            echo "### 📚 Documentation-Only Rebuild" >> $GITHUB_STEP_SUMMARY
            echo "- **Reason**: Only documentation/config files changed" >> $GITHUB_STEP_SUMMARY
            echo "- **Status**: ${{ needs.docs-only-rebuild.result }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Benefit**: ⚡ Faster CI (skipped notebook execution)" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📖 Documentation Preview" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ needs.build-docs-preview.result }}" >> $GITHUB_STEP_SUMMARY
          
          # Add optimization notes
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ⚡ Optimization Benefits" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.detect-changes.outputs.docs-only }}" = "true" ]; then
            echo "- ✅ Skipped notebook execution (faster CI)" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ Reduced compute usage" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ Faster feedback for documentation changes" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ℹ️ Full validation ran due to notebook/requirement changes" >> $GITHUB_STEP_SUMMARY
          fi
