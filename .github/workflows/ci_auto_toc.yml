name: Automated Table of Contents

on:
    workflow_dispatch:
        inputs:
            notebook_name:
            description: 'The name of the notebook to add to the table of contents (e.g., example.ipynb)'
            required: true
            default: 'example.ipynb'

jobs:
    add_toc:
        runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Find notebook path
        id: find_path
        run: |
          NOTEBOOK_NAME="${{ github.event.inputs.notebook_name }}"
          NOTEBOOK_PATH=$(find ./notebooks -name "$NOTEBOOK_NAME" -type f)
          if [ -z "$NOTEBOOK_PATH" ]; then
            echo "::error::Notebook '${NOTEBOOK_NAME}' not found in the notebooks directory."
            exit 1
          fi
          SUBDIR=$(echo "$NOTEBOOK_PATH" | sed -E 's#^\.?/notebooks/([^/]+)/.*#\1#')

          if [ "$SUBDIR" = "cross_instrument" ]; then
            SUBDIR="Cross-Instrument"
          fi

          echo "notebook_path=$NOTEBOOK_PATH" >> $GITHUB_ENV
          echo "instrument=$SUBDIR" >> $GITHUB_ENV

      - name: Extract notebook title using jq
        id: get_title
        run: |
          TITLE=$(jq -r '
            .cells
            | map(select(.cell_type == "markdown"))
            | .[0].source[]
            | select(test("^#"))
            | match("^#+\\s*(.*)").captures[0].string
            ' "$notebook_path")

          if [ -z "$TITLE" ]; then
            echo "::warning::No markdown title found"
          fi

          echo "notebook_title=$TITLE" >> $GITHUB_OUTPUT

      - name: Add notebook to _toc.yml if not already listed
        run: |
          NOTEBOOK_PATH="${{ env.notebook_path }}"
          NOTEBOOK_TITLE="${{ steps.get_title.outputs.notebook_title }}"
          CAPTION="${{ env.instrument }}"
          TOC_FILE="_toc.yml"

          # Ensure required values exist
          if [ -z "$NOTEBOOK_PATH" ] || [ -z "$NOTEBOOK_TITLE" ] || [ -z "$CAPTION" ]; then
            echo "::error::Missing notebook path, title, or caption."
            exit 1
          fi

          # Skip if already present
          if grep -Fq "file: $NOTEBOOK_PATH" "$TOC_FILE"; then
            echo "Notebook already listed in TOC."
            exit 0
          fi

          # Prepare new YAML entry
          NEW_ENTRY="    - file: $NOTEBOOK_PATH\n      title: $NOTEBOOK_TITLE"

          # Insert under correct caption
          awk -v cap="$CAPTION" -v newentry="$NEW_ENTRY" '
            BEGIN { found = 0 }
            {
              print $0
              if ($0 ~ "caption: " cap) {
                found = 1
              } else if (found && $0 ~ "chapters:") {
                print newentry
                found = 0
              }
            }
          ' "$TOC_FILE" > toc_tmp && mv toc_tmp "$TOC_FILE"

          echo "Notebook added to _toc.yml"
