# Smart Main Branch Workflow - Conditional CI Based on File Changes  
# Copy this file to your repository's .github/workflows/ directory
# This workflow provides intelligent CI for main branch pushes

name: Smart Notebook CI - Main Branch

on:
  push:
    branches: [ main ]
    paths:
      - 'notebooks/**'
      - '*.yml'
      - '*.yaml'
      - 'requirements.txt'
      - 'pyproject.toml'
      - '_config.yml'
      - '_toc.yml'
      - 'scripts/**'

jobs:
  # Detect what files changed to determine workflow path
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      docs-only: ${{ steps.changes.outputs.docs-only }}
      notebooks-changed: ${{ steps.changes.outputs.notebooks-changed }}
      deploy-needed: ${{ steps.changes.outputs.deploy-needed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect file changes
        id: changes
        run: |
          # Get the list of changed files from the last commit
          echo "Getting changed files from last commit..."
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          
          echo "Changed files:"
          echo "$CHANGED_FILES"
          
          # Initialize flags
          NOTEBOOKS_CHANGED=false
          DOCS_CONFIG_CHANGED=false
          REQUIREMENTS_CHANGED=false
          DEPLOY_NEEDED=false
          
          # Check each changed file
          while IFS= read -r file; do
            echo "Checking file: $file"
            
            case "$file" in
              notebooks/*.ipynb)
                echo "  → Notebook file changed"
                NOTEBOOKS_CHANGED=true
                DEPLOY_NEEDED=true
                ;;
              notebooks/*.py|notebooks/*.R)
                echo "  → Notebook code file changed"
                NOTEBOOKS_CHANGED=true
                DEPLOY_NEEDED=true
                ;;              requirements.txt|pyproject.toml|setup.py)
                echo "  → Requirements file changed"
                REQUIREMENTS_CHANGED=true
                DEPLOY_NEEDED=true
                ;;
              _config.yml|_toc.yml)
                echo "  → Documentation config changed"
                DOCS_CONFIG_CHANGED=true
                DEPLOY_NEEDED=true
                ;;
              *.yml|*.yaml)
                # Only workflow or simple config files
                if [[ "$file" == .github/workflows/* ]]; then
                  echo "  → Workflow file changed (may need deployment)"
                  DEPLOY_NEEDED=true
                else
                  echo "  → Config file changed"
                  DOCS_CONFIG_CHANGED=true
                  DEPLOY_NEEDED=true
                fi
                ;;
              scripts/*)
                echo "  → Script file changed"
                DOCS_CONFIG_CHANGED=true
                DEPLOY_NEEDED=true
                ;;
              *.html|*.css|*.js)
                echo "  → Static web file changed"
                DOCS_CONFIG_CHANGED=true
                DEPLOY_NEEDED=true
                ;;
              *.md|*.rst)
                echo "  → Documentation file changed"
                DOCS_CONFIG_CHANGED=true
                DEPLOY_NEEDED=true
                ;;
              *)
                echo "  → Other file type"
                ;;
            esac
          done <<< "$CHANGED_FILES"
          
          # Determine workflow path
          if [ "$NOTEBOOKS_CHANGED" = "true" ] || [ "$REQUIREMENTS_CHANGED" = "true" ]; then
            echo "📔 Notebooks or requirements changed - Full CI with execution needed"
            echo "notebooks-changed=true" >> $GITHUB_OUTPUT
            echo "docs-only=false" >> $GITHUB_OUTPUT
          elif [ "$DOCS_CONFIG_CHANGED" = "true" ]; then
            echo "📚 Only documentation/config files changed - Docs rebuild only"  
            echo "notebooks-changed=false" >> $GITHUB_OUTPUT
            echo "docs-only=true" >> $GITHUB_OUTPUT
          else
            echo "📝 No significant changes detected - Skip CI"
            echo "notebooks-changed=false" >> $GITHUB_OUTPUT
            echo "docs-only=false" >> $GITHUB_OUTPUT
            DEPLOY_NEEDED=false
          fi
          
          echo "deploy-needed=$DEPLOY_NEEDED" >> $GITHUB_OUTPUT

  # Full notebook CI with execution (for main branch when notebooks change)
  full-notebook-ci:
    needs: detect-changes
    if: needs.detect-changes.outputs.notebooks-changed == 'true'
    uses: spacetelescope/notebook-ci-actions/.github/workflows/ci_pipeline.yml@main
    with:
      python-version: "3.11"
      execution-mode: "full"  # Full execution for main branch
      build-html: false  # HTML will be built in deployment job
      security-scan: true
    secrets:
      CASJOBS_USERID: ${{ secrets.CASJOBS_USERID }}
      CASJOBS_PW: ${{ secrets.CASJOBS_PW }}

  # Documentation-only rebuild (when only docs/config files change)
  docs-only-rebuild:
    needs: detect-changes
    if: needs.detect-changes.outputs.docs-only == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Docs-only rebuild summary
        run: |
          echo "## 📚 Documentation-Only Rebuild" >> $GITHUB_STEP_SUMMARY
          echo "Only documentation or configuration files changed." >> $GITHUB_STEP_SUMMARY
          echo "Skipping notebook execution for faster deployment." >> $GITHUB_STEP_SUMMARY

  # Build and deploy documentation (runs after CI success or for docs-only changes)
  build-and-deploy-docs:
    needs: [detect-changes, full-notebook-ci, docs-only-rebuild]
    if: |
      always() && 
      needs.detect-changes.outputs.deploy-needed == 'true' && 
      (needs.full-notebook-ci.result == 'success' || 
       needs.full-notebook-ci.result == 'skipped' || 
       needs.docs-only-rebuild.result == 'success')
    uses: spacetelescope/notebook-ci-actions/.github/workflows/ci_html_builder.yml@main
    with:
      python-version: "3.11"
      post-run-script: "scripts/jdaviz_image_replacement.sh"  # Optional, adjust per repo
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  # Summary job to provide clear feedback and statistics
  deployment-summary:
    needs: [detect-changes, full-notebook-ci, docs-only-rebuild, build-and-deploy-docs]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Deployment Summary
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.detect-changes.outputs.notebooks-changed }}" = "true" ]; then
            echo "### 📔 Full Notebook CI & Deployment" >> $GITHUB_STEP_SUMMARY
            echo "- **Reason**: Notebook or requirement files changed" >> $GITHUB_STEP_SUMMARY
            echo "- **CI Status**: ${{ needs.full-notebook-ci.result }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Deployment Status**: ${{ needs.build-and-deploy-docs.result }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Execution**: Full notebook execution performed" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.detect-changes.outputs.docs-only }}" = "true" ]; then
            echo "### 📚 Documentation-Only Deployment" >> $GITHUB_STEP_SUMMARY
            echo "- **Reason**: Only documentation/config files changed" >> $GITHUB_STEP_SUMMARY
            echo "- **Deployment Status**: ${{ needs.build-and-deploy-docs.result }}" >> $GITHUB_STEP_SUMMARY
            echo "- **Benefit**: ⚡ Faster deployment (skipped notebook execution)" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ❌ No Deployment Needed" >> $GITHUB_STEP_SUMMARY
            echo "- **Reason**: No significant files changed" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Add performance metrics
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Performance Metrics" >> $GITHUB_STEP_SUMMARY
          if [ "${{ needs.detect-changes.outputs.docs-only }}" = "true" ]; then
            echo "- ⚡ **Optimization**: Documentation-only rebuild" >> $GITHUB_STEP_SUMMARY
            echo "- 🕒 **Time Saved**: ~10-30 minutes (notebook execution skipped)" >> $GITHUB_STEP_SUMMARY
            echo "- 💰 **Cost Saved**: Reduced GitHub Actions minutes usage" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.detect-changes.outputs.notebooks-changed }}" = "true" ]; then
            echo "- 🔄 **Full CI**: Complete validation and execution performed" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ **Quality**: All notebooks validated and tested" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Useful Links" >> $GITHUB_STEP_SUMMARY
          echo "- [Workflow Documentation](https://github.com/spacetelescope/notebook-ci-actions)" >> $GITHUB_STEP_SUMMARY
          echo "- [Repository Documentation](https://spacetelescope.github.io/${{ github.event.repository.name }})" >> $GITHUB_STEP_SUMMARY
