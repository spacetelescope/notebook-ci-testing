name: Deprecate Notebook

on:
  workflow_dispatch:
    inputs:
      notebook_name:
        description: 'The name of the notebook to deprecate (e.g., example.ipynb)'
        required: true
        default: 'example.ipynb'

jobs:
  deprecate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Find notebook path
        id: find_path
        run: |
          NOTEBOOK_NAME="${{ github.event.inputs.notebook_name }}"
          NOTEBOOK_PATH=$(find ./notebooks -name "$NOTEBOOK_NAME" -type f)
          if [ -z "$NOTEBOOK_PATH" ]; then
            echo "::error::Notebook '${NOTEBOOK_NAME}' not found in the notebooks directory."
            exit 1
          fi
          echo "notebook_path=$NOTEBOOK_PATH" >> $GITHUB_ENV

      - name: Check for deprecated tag
        id: check_deprecated
        run: |
          notebook_path="${{ env.notebook_path }}"
          if jq -e '.metadata.deprecated.status == true' "$notebook_path" > /dev/null; then
            echo "This notebook is already flagged as deprecated. Updating deprecation date only."
            exit 0
          fi

      - name: Add deprecated tag with timestamp and removal date
        if: steps.check_deprecated.outcome == 'failure'
        run: |
          notebook_path="${{ env.notebook_path }}"
          timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          removal_date=$(date -u -d "$timestamp + 30 days" +"%Y-%m-%dT%H:%M:%SZ")
          jq --arg ts "$timestamp" --arg rd "$removal_date" \
            '.metadata.deprecated = { "status": true, "timestamp": $ts, "removal_date": $rd }' \
            "$notebook_path" > temp.ipynb && mv temp.ipynb "$notebook_path"

      - name: Update deprecation date if already deprecated
        if: steps.check_deprecated.outcome == 'success'
        run: |
          notebook_path="${{ env.notebook_path }}"
          timestamp=$(date -u +"%Y-%m-%dT%H

