name: Deprecate Notebook

on:
  workflow_dispatch:
    inputs:
      notebook_filename:
        description: 'Notebook filename (e.g., example.ipynb)'
        required: true

jobs:
  find_notebooks:
    runs-on: ubuntu-latest
    outputs:
      notebook_list: ${{ steps.find.outputs.notebook_list }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Find notebook files
      id: find
      run: |
        notebook_files=$(find notebooks -name ${{ inputs.filename }} | jq -R -s -c 'split("\n")[:-1]')
        #echo "::set-output name=notebook_list::$notebook_files"
        echo "notebook_list=$notebook_files" >>$GITHUB_OUTPUT
        
  deprecate-notebook:
    needs: find_notebooks
    runs-on: ubuntu-latest
    outputs:
      executed_notebooks: ${{ steps.execute.outputs.executed_notebooks }}
    strategy:
      fail-fast: false
      matrix: 
        notebook: ${{fromJson(needs.find_notebooks.outputs.notebook_list)}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history to ensure 'gh-storage' branch exists or can be created

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install nbformat pillow

      - name: Deprecate Notebook
        env:
          NOTEBOOK_FILE: ${{ inputs.notebook_filename }}
        run: |
          python .github/scripts/deprecate_notebook.py ${{ matrix.notebook }}
          
      - name: Push to gh-storage branch
        run: |
          git config pull.rebase false
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git checkout -b gh-storage
          git add ${{ matrix.notebook }}
          git commit -m 'Added executed notebook ${{ matrix.notebook }}'
          ATTEMPTS_LEFT=3
          until [ $ATTEMPTS_LEFT -lt 1 ]
          do
            git pull origin gh-storage -s recursive -X ours --allow-unrelated-histories
            git push origin gh-storage 2>&1 | tee output.log
            if grep -q "Updates were rejected because the remote contains work" output.log; then
              echo "Push failed due to conflicting remote changes. Remaining attempts: $ATTEMPTS_LEFT"
              let "ATTEMPTS_LEFT--"
              sleep 5
            else
              break
            fi
          done
        
